# -*- coding: utf-8 -*-
# @Author  : Lee
# @Time    : 2021/8/10 17:24
# @Function: 3.2. 调整估计器的超参数
#
# 超参数，即不直接在估计器内学习的参数。
# 典型的例子有：用于支持向量分类器的 C 、kernel 和 gamma ，用于Lasso的 alpha
# estimator.get_params() 获取到给定估计器的所有参数的名称和当前值
# 搜索包括:
#   估计器(回归器或分类器，例如 sklearn.svm.SVC())
#   参数空间
#   搜寻或采样候选的方法
#   交叉验证方案
#   计分函数

# 有些模型支持专业化的、高效的参数搜索策略
#   GridSearchCV 对于给定的值考虑了所有参数组合；
#   RandomizedSearchCV 可以从具有指定分布的参数空间中抽取给定数量的候选。

# ---------------------------- 3.2.1. 网格追踪法–穷尽的网格搜索 ----------------------------
# GridSearchCV 提供的网格搜索从通过 param_grid 参数确定的网格参数值中全面生成候选。
# GridSearchCV 实例实现了常用估计器 API：当在数据集上“拟合”时，参数值的所有可能的组合都会被评估，从而计算出最佳的组合。

# --------------------------- 3.2.2. 随机参数优化 --------------------------------------
# 实现了对参数的随机搜索, 其中每个设置都是从可能的参数值的分布中进行取样。 这对于穷举搜索有两个主要优势:
#   可以选择独立于参数个数和可能值的预算
#   添加不影响性能的参数不会降低效率


# ---------------------------------- 3.2.3. 参数搜索技巧 --------------------------------------
# 默认情况下, 参数搜索使用估计器的评分函数来评估（衡量）参数设置。
# 1. 指定目标度量   参数搜索使用估计器的评分函数来评估（衡量）参数设置，比如用于分类的accuracy_score和用于回归的r2_score 。
# 2. 为评估指定多个指标   GridSearchCV 和 RandomizedSearchCV 允许为评分参数指定多个指标。
# 3. 复合估计和参数空间   管道
# 4. 模型选择：开发和评估
# 5. 并行机制  用关键字 n_jobs=-1 可以使计算并行运行
# 6. 对故障的鲁棒性 设置 error_score=0 (或=np.NaN) 将使程序对此类故障具有鲁棒性,发出警告并将该折叠的分数设置为0(或NaN), 但可以完成搜索。


# ----------------------------------------3.2.4. 暴力参数搜索的替代方案-------------------------------
# 1. 模型特定交叉验证
#   某些模型可以与参数的单个值的估计值一样有效地适应某一参数范围内的数据。 此功能可用于执行更有效的交叉验证, 用于此参数的模型选择。
#   该策略最常用的参数是编码正则化矩阵强度的参数。称之为, 计算估计器的正则化路径(regularization path)。
# 2. 信息标准
#   一些模型通过计算一个正则化路径 (代替使用交叉验证得出数个参数), 可以给出正则化参数最优估计的信息理论闭包公式。
# 3. 出袋估计
#   当使用基于装袋的集合方法时，即使用具有替换的采样产生新的训练集，部分训练集保持不用。 对于集合中的每个分类器，训练集的不同部分被忽略。











